/*
The program must accept a list of mobile numbers (in separate lines) as the input. The
character q or Q represents the end of the input. The program must print the number of invalid
mobile numbers among the given list of mobile numbers as the output. A valid mobile number
contains exactly 10 digits.
Boundary Condition(s):
1 <= Length of each string <= 20
Input Format:
The lines, each contains a string value.
Output Format:
The first line contains the number of invalid mobile numbers.
Example Input/Output 1:
Input:
9854653221
997878A1576
9992224578
999225789900
986578989B
817524990
Q
Output:
4
Explanation:
The 4 invalid mobile numbers are given below.
997878A1576
999225789900
986578989B
817524990
Hence the output is 4.
Example Input/Output 2:
Input:
7006868327
8745152751
90379383946799
7180S16U65
9404722712T
929191K54588G6
84385659
q
Output:
5
*/

import java.util.*;
public class Hello {

    public static void main(String[] args) {
		//Your Code Here
		Scanner s=new Scanner(System.in);
		String a;
		String b="";
		while(true){
		    a=s.next();
		    if(a.equals("Q") || a.equals("q")){
		        break;
		    }
		    else{
		        b+=a+" ";
		    }
		}
		int count=0,cc=0,flag=0;
		String sp[]=b.split(" ");
		for(int i=0;i<sp.length;i++){
		    String d=sp[i];
		    for(int j=0;j<d.length();j++){
		        char e=d.charAt(j);
		        if(!(e>='A' && e<='Z')){
		            count++;
		        }
		        else{
		            flag=1;
		        }
		    }
		    if(count!=10 || flag==1){
		        cc++;
		    }
		    count=0;
		    flag=0;
		}
		System.out.print(cc);
	}
}
